package com.kie_pract.doo;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.time.LocalDate;
import java.time.ZoneId;

function int hello(String name,LocalDate lsd,LocalDate led) {
        Date date1=Date.from(lsd.atStartOfDay(ZoneId.systemDefault()).toInstant());
        Date date2=Date.from(led.atStartOfDay(ZoneId.systemDefault()).toInstant());
        Calendar c1=Calendar.getInstance();
        c1.setTime(date1);
        
        Calendar c2=Calendar.getInstance();
        c2.setTime(date2);
        int sundays=0;
		System.out.println(c1.before(c2));
        while(c1.before(c2)){
			
		
        if(c1.get(Calendar.DAY_OF_WEEK)==Calendar.SUNDAY){
            sundays++;
            
        }
		c1.add(Calendar.DATE,1);
    }
	
        
        
        return sundays;
        
    }
    
   



rule "triql"
salience 10

when 
    $F:foo($lsd:leaveStartDate,$led:leaveEndDate,sundays==0,count==0)
    
then
    
    modify($F){
        setSundays( hello("anu1",$lsd,$led)),
        setCount(1)
    }
end




/*rule "sod"
salience 10

when 
    $F:foo($lsd:leaveStartDate,$led:leaveEndDate,$lsd==$led,$led!=LocalDate.now(),leaveStartDate.dayOfWeek != DayOfWeek.SATURDAY)
    
then
    
    modify($F){
        setSundays( hello("anu1",$lsd,$led)),
        setCount(1)
    }
end*/